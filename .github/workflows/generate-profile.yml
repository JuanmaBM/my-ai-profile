name: Generate AI Profile

on:
  workflow_dispatch:
    inputs:
      github_user:
        description: GitHub username
        required: true
        type: string
      linkedin_user:
        description: LinkedIn public id/username
        required: true
        type: string
      name:
        description: Display name for the final profile
        required: true
        type: string

permissions:
  contents: write

jobs:
  github:
    runs-on: ubuntu-latest
    container:
      image: quay.io/jbarea/my-ai-profile-generator:1.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run GitHub analysis
        env:
          GITHUB_TOKEN: ${{ github.token }}
          LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ${{ secrets.LLM_MODEL }}
        run: |
          python cli.py github "${{ inputs.github_user }}"

      - name: Upload GitHub analysis artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-analysis
          path: github_analysis.json

  linkedin:
    runs-on: ubuntu-latest
    container:
      image: quay.io/jbarea/my-ai-profile-generator:1.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run LinkedIn analysis
        env:
          LINKEDIN_EMAIL: ${{ secrets.LINKEDIN_EMAIL }}
          LINKEDIN_PASSWORD: ${{ secrets.LINKEDIN_PASSWORD }}
          GITHUB_TOKEN: ${{ github.token }}
          LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ${{ secrets.LLM_MODEL }}
        run: |
          python cli.py linkedin "${{ inputs.linkedin_user }}"

      - name: Upload LinkedIn analysis artifact
        uses: actions/upload-artifact@v4
        with:
          name: linkedin-analysis
          path: linkedin_analysis.json

  merge:
    runs-on: ubuntu-latest
    needs: [github, linkedin]
    container:
      image: quay.io/jbarea/my-ai-profile-generator:1.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download GitHub analysis
        uses: actions/download-artifact@v4
        with:
          name: github-analysis
          path: .

      - name: Download LinkedIn analysis
        uses: actions/download-artifact@v4
        with:
          name: linkedin-analysis
          path: .

      - name: Extract downloaded artifacts (if zipped)
        run: |
          python - <<'PY'
          import glob, zipfile, os
          for zpath in glob.glob("*.zip"):
              with zipfile.ZipFile(zpath) as zf:
                  zf.extractall(".")
              os.remove(zpath)
          PY

      - name: Normalize artifact file locations
        run: |
          python - <<'PY'
          import os, glob, shutil

          def move_first(patterns, dest_name):
              # If already present at root, keep it
              if os.path.exists(dest_name):
                  return
              for pat in patterns:
                  for path in glob.glob(pat, recursive=True):
                      if os.path.isfile(path):
                          shutil.move(path, dest_name)
                          return

          # Possible locations/names produced by artifact download
          move_first([
              'github-analysis/github_analysis.json',
              'github-analysis/**/github_analysis.json',
              '**/github_analysis.json',
              'github-analysis/github-analysis.json',
              'github-analysis/**/github-analysis.json',
              '**/github-analysis.json',
          ], 'github_analysis.json')

          move_first([
              'linkedin-analysis/linkedin_analysis.json',
              'linkedin-analysis/**/linkedin_analysis.json',
              '**/linkedin_analysis.json',
              'linkedin-analysis/linkedin-analysis.json',
              'linkedin-analysis/**/linkedin-analysis.json',
              '**/linkedin-analysis.json',
          ], 'linkedin_analysis.json')
          PY

      - name: Run merge and push profile
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          ls -la
          python cli.py merge "${{ inputs.name }}"
          set -e
          if git status --porcelain | grep -q "MyAIProfile.md"; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add MyAIProfile.md
            git commit -m "chore: update MyAIProfile.md [skip ci]" || exit 0
            git push
          else
            echo "No changes to commit."
          fi 